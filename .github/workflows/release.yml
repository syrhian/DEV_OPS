name: Docker Release Workflow

on:
  push:
    branches:
      - relWorkflow

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - name: Provide MySQL Root Password
        run: echo "${{ secrets.MYSQL_ROOT_PASSWORD }}" > mysql_root_password.txt
      - name: Build and Start Containers
        run: docker-compose --env-file mysql_root_password.txt up --build -d
      - name: Wait for Services to Start
        run: sleep 30
      - name: Run Tests
        run: |
          curl -sSf http://localhost:8080
      - name: Tear Down Containers
        run: docker-compose down

  build_package:
    name: Build and Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Build Docker Image
        run: |
          docker-compose build

  scan_security:
    name: Scan Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Scan Docker Image
        run: |


  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ build_package, scan_security ]
    if: github.event_name == 'push'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Generate Release Notes
        run: |
          git log --format='%h %s' $(git describe --tags --abbrev=0)..HEAD > release_notes.txt
          cat release_notes.txt
      - name: Publish Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: mon_image:latest, mon_image:${{ github.sha }}
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
